#!/bin/bash

IFS='
'

getParentDir()	{
	nbParents=`echo $1 | grep -o "\/" | wc -l`
	newPath=`echo $1 | tr '\/' '\t' | sed 's/\t$//g' | tr '\t' '\n' | head -n $nbParents | tr '\n' '\t' | sed 's/\t$//g' | tr '\t' '\/'`
	echo $newPath
}

firstSearch(){
	pathTmp=$1
	i=0
	while [ "$pathTmp" != "$HOME" ] && ! [[ "$pathTmp" =~ \/tmp\/[^\/]+ ]]; do
		for fileDescr in `ls -aF $pathTmp`; do
			[[ ${fileDescr} =~ Makefile ]] && echo "$pathTmp" && return
			[[ ${fileDescr} =~ \.git\/ ]] && echo "$pathTmp" && return
		done
		pathTmp=`getParentDir $pathTmp`
	done
	echo "notFound" 
}

secondSearch(){
	pathTmp=$1
	i=0
	while [ "$pathTmp" != "$HOME" ] && ! [[ "$pathTmp" =~ \/tmp\/[^\/]+ ]]; do
		for fileDescr in `ls -aF $pathTmp`; do
			[[ ${fileDescr} =~ .*src\/$ ]] && echo "$pathTmp" && return
			[[ ${fileDescr} =~ .*include\/$ ]] && echo "$pathTmp" && return
		done
		pathTmp=`getParentDir $pathTmp`
	done
	echo -n "notFound" 
}

path=$1
[ `echo  "$1" | grep -Ec "^[^\/].*$"` -gt 0 ] && path="`pwd`/$1"

fS="`firstSearch $1`"
if [ "$fS" = "notFound" ]
then
	sS="`secondSearch $1`"
	if [ "$sS" = "notFound" ]
	then
		echo -n "$1"
	else
		echo -n "$sS"
	fi
else
	echo -n "$fS"
fi
