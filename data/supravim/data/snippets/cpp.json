{
	"main simple": {
		"prefix": ["mainn"],
		"description": "main (int ac, char **av)",
		"body": [
			"int\tmain(int ac, char *av[])",
			"{",
			"\t$0",
			"\treturn (0);",
			"}"
		]
	},

	"main void": {
		"prefix": ["mainv"],
		"description": "main(void)",
		"body": [
			"int\tmain(void)",
			"{",
			"\t$0",
			"\treturn (0);",
			"}"
		]
	},

	"main header": {
		"prefix": ["mainh"],
		"description": "main(int ac, char **av) with Header",
		"body": [
			"#include <iostream>",
			"#include <string>",
			"",
			"int\tmain(int ac, char **av)",
			"{",
			"\t$0",
			"\treturn (0);",
			"}"
		]
	},

	"todo": {
		"prefix": ["todo"],
		"description": "TODO comment",
		"body": [
			"// TODO: $1"
		]
	},

	"fixme": {
		"prefix": ["fix[me]"],
		"description": "FIXME comment",
		"body": [
			"// FIXME: $1"
		]
	},

	"perf": {
		"prefix": ["perf"],
		"description": "PERF comment",
		"body": [
			"// PERF: $1"
		]
	},

	"warning": {
		"prefix": ["warn[ing]"],
		"description": "WARNING comment",
		"body": [
			"// WARNING: $1"
		]
	},

	"note": {
		"prefix": ["note"],
		"description": "NOTE comment",
		"body": [
			"// NOTE: $1"
		]
	},

	"hack": {
		"prefix": ["hack"],
		"description": "HACK comment",
		"body": [
			"// HACK: $1"
		]
	},

	"while": {
		"prefix": ["while"],
		"description": "while ()",
		"body": [
			"while ($1)",
			"{",
			"\t$0",
			"}"
		]
	},

	"if": {
		"prefix": ["if"],
		"description": "if ()",
		"body": [
			"if ($1)",
			"{",
			"\t$0",
			"}"
		]
	},
	
	"ife": {
		"prefix": ["ife"],
		"description": "if else statement",
		"body": [
			"if ($1)",
			"{",
			"\t$2",
			"}",
			"else",
			"{",
			"\t$3",
			"}$0"
		]
	},

	"ifee": {
		"prefix": ["ifee"],
		"description": "if else if else statement",
		"body": [
			"if ($1)",
			"{",
			"\t$2",
			"}",
			"else if ($3)",
			"{",
			"\t$4",
			"}",
			"else",
			"{",
			"\t$5",
			"}$0"
		]
	},

	"else if": {
		"prefix": ["elseif", "elif"],
		"description": "else if ()",
		"body": [
			"else if ($1)",
			"{",
			"\t$0",
			"}"
		]
	},
	"Class": {
		"prefix": ["class"],
		"description": "class ()",
		"body": [
			"class ${1:MyClass}",
			"{",
				"\t public:",
				"\t\t$1($2);",
				"\t\t~$1();",
				"\t private:",
				"\t\t$3",
				"};"
		]
	},
	"ifndef": {
		"prefix": ["ifndef"],
		"description": "ifndef",
		"body": [
			"#ifndef $1",
			"#define $1",
			"$0",
			"#endif"
		]
	},
	"loop": {
		"prefix": ["loop"],
		"description": "loop x times",
		"body": [
			"for (int i = 0; i != $1; i++)",
			"{",
			"\t$0",
			"}"
		]
	},

	"for": {
		"prefix": ["for"],
		"description": "for",
		"body": [
			"for (int ${1:index} = $2; $1 != $3; $1++)",
			"{",
			"\t$0",
			"}"
		]
	},

	"tstruct": {
		"prefix": ["tstruct"],
		"body": [
			"typedef struct s_${1:my_struct}",
			"{",
			"\t$0",
			"}t_${1};"
		]
	},

	"struct": {
		"prefix": ["struct"],
		"body": [
			"struct s_${1:my_struct}",
			"{",
			"\t$0",
			"};"
		]
	},

	"ps": {
		"prefix": ["ps"],
		"description": "print string only",
		"body": [
			"std::cout << \"$1\" << std::endl;$0"
		]
	},

	"print": {
		"prefix": ["pr[int]"],
		"description": "print statement",
		"body": [
			"std::cout << $1 << std::endl;$0"
		]
	},

	"enum": {
		"prefix": ["enum"],
		"description": "enum",
		"body": [
			"enum ${1:Name}",
			"{",
			"\t${2:Enum1},",
			"\t${3:Enum2},",
			"};$0"
		]
	}


}
