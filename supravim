#!/bin/bash

red="\033[91m"
green="\033[92m"
blue="\033[94m"
white="\033[37m"
bold="\033[1m"
reset="\033[0m"

enable_fct(){
	case $next_param in
		autopairs) sed -ir 's/^let.*g:AutoPairs[ =\{\}]*$/\"\*autopairs\* &/g' ~/.vimrc; echo -e "${bold}${green}[$next_param]${reset} correctly enabled";;
		mouse) sed -i 's/\"\*mouse\* //' ~/.vimrc; echo -e "${bold}${green}[$next_param]${reset} correctly enabled";;
		tree) sed -i 's/\"\*nerdtree\* //' ~/.vimrc; echo -e "${bold}${green}[$next_param]${reset} correctly enabled";;
		icons) if ! [ -d ~/.vim/bundle/devicons ]; then git clone https://github.com/ryanoasis/vim-devicons ~/.vim/bundle/devicons; echo -e "\n${bold}${blue}[INFO]${reset} If you do not have a compatible font, here are some: https://www.nerdfonts.com/font-downloads ";else echo -e "${green}[icons]${reset} already enabled"; fi ;;
		cflags) sed -i 's/\"\*cflags\* //g' ~/.vimrc;
			sed -i 's/^[^\ \*]*exec \"!gcc -g \%/\"\*cflags\* &/g' ~/.vimrc;
			sed -i 's/^tnoremap.*gcc \*.*/\"\*cflags\* &/g' ~/.vimrc;
			echo -e "${bold}${green}[$next_param]${reset} correctly enabled";;
		"") echo -e "Please enter something to enable.";;
		*) echo -e "${bold}[$next_param]${reset} : cannot enable."
	esac
}


disable_fct(){
    case $next_param in
        autopairs) sed -i 's/\"\*autopairs\* //g' ~/.vimrc; echo -e "${bold}${red}[$next_param]${reset} correctly disabled";;
        mouse) sed -i 's/^set mouse.*/\"\*mouse\* &/' ~/.vimrc; echo -e "${bold}${red}[$next_param]${reset} correctly disabled";;
        tree) sed -i 's/^[^\"].*nerdtree.*startup.*$/\"\*nerdtree\* &/' ~/.vimrc; echo -e "${bold}${red}[$next_param]${reset} correctly disabled";;
		icons) if [ -d ~/.vim/bundle/devicons ]; then rm -rf ~/.vim/bundle/devicons; echo -e "${bold}${red}[$next_param]${reset} correctly disabled"; fi ;;
		cflags) sed -i 's/\"\*cflags\* //g' ~/.vimrc;
			sed -i 's/^[^\ \*]*exec.* -g -Wall/\"\*cflags\* &/g' ~/.vimrc;
			sed -i 's/^tnoremap.*\-Wall.*/\"\*cflags\* &/g' ~/.vimrc;
			echo -e "${bold}${red}[$next_param]${reset} correctly disabled";; 
		"") echo -e "Please enter something to disable.";;
        *) echo -e "[$next_param] : cannot enable."
    esac
}

theme_fct(){
	case $next_param in
		1 | gruvbox) sed -i 's/^colorscheme .*$/colorscheme gruvbox/' ~/.vimrc; echo -e "Vim theme set to ${bold}gruvbox${reset}.";;
		2 | molokai) sed -i 's/^colorscheme .*$/colorscheme molokai/' ~/.vimrc; echo -e "Vim theme set to ${bold}molokai${reset}.";;
		3 | dracula) sed -i 's/^colorscheme .*$/colorscheme dracula/' ~/.vimrc; echo -e "Vim theme set to ${bold}dracula${reset}.";;
		4 | atom)  sed -i 's/^colorscheme .*$/colorscheme atom/' ~/.vimrc; echo -e "Vim theme set to ${bold}atom${reset}.";;
		5 | iceberg)  sed -i 's/^colorscheme .*$/colorscheme iceberg/' ~/.vimrc; echo -e "Vim theme set to ${bold}iceberg${reset}.";;
		6 | onedark)  sed -i 's/^colorscheme .*$/colorscheme onedark/' ~/.vimrc; echo -e "Vim theme set to ${bold}onedark${reset}.";;
		7 | onehalf)  sed -i 's/^colorscheme .*$/colorscheme onehalf/' ~/.vimrc; echo -e "Vim theme set to ${bold}onehalf${reset}.";;
		8 | onelight)  sed -i 's/^colorscheme .*$/colorscheme onelight/' ~/.vimrc; echo -e "Vim theme set to ${bold}onelight${reset}.";;
		light | white) sed -i "s/^set background=.*/set background=light/g" ~/.vimrc; echo -e "Vim set to ${bold}\033[47;30mlight${reset} background.";;
		dark | black) sed -i "s/^set background=.*/set background=dark/g" ~/.vimrc; echo -e "Vim set to ${bold}\033[40mdark${reset} background.";;
		"")echo "Retry adding one of following theme:"; cat ~/.vimrc | grep -E "\" [0-9]+: [a-z]+" | grep -oE "[0-9]+: [a-z]+" | cat; echo "light:	for light background"; echo "dark:	for dark background";;
		*) echo "Theme name didn't match with any, please try with one of these."; cat ~/.vimrc | grep -E "\" [0-9]+: [a-z]+" | grep -oE "[0-9]+: [a-z]+" | cat; echo -e "light:	for light background"; echo "dark:	for dark background";;
	esac
}

switch(){
	if [ -f ~/.vimrc ]
	then
		if [ `grep -c "SUPRAVIM" ~/.vimrc` -gt 0 ]
		then
			mv ~/.vimrc ~/.vimrc_supravim_off
			echo -e "SupraVim configuration: ${bold}${red}disabled${reset}"
			if [ -f ~/.vimrc_user_off ]
			then
				mv ~/.vimrc_user_off ~/.vimrc
				echo -e "Your vim configuration: ${bold}${green}enabled${reset}"
			fi
		else
			mv ~/.vimrc ~/.vimrc_user_off
			echo  -e "Your vim configuration: ${bold}${red}disabled${reset}"
			if [ -f ~/.vimrc_supravim_off ]
			then
				mv ~/.vimrc_supravim_off ~/.vimrc
				echo -e "SupraVim configuration: ${bold}${green}enabled${reset}"
			fi
		fi
	else
		if [ -f  ~/.vimrc_supravim_off ]
		then
			mv ~/.vimrc_supravim_off ~/.vimrc
			echo -e "Supravim configuration: ${bold}${green}enabled${reset}"
		fi
	fi
}

status_fct(){
	echo -e "${bold}-------- Options --------${reset}"

	if [[ $(grep -c "\"\*autopairs\* " ~/.vimrc) == 0 ]]; then
		echo -e " ${bold}${red}autopairs${reset}"
	else
		echo -e " ${bold}${green}autopairs${reset} "
	fi

	if [[ $(grep -c "\"\*mouse\*" ~/.vimrc) == 0 ]]; then
		echo -e " ${bold}${green}mouse${reset} "
	else
		echo -e " ${bold}${red}mouse${reset}"
	fi

	if [[ $(grep -c "\"\*nerdtree\*" ~/.vimrc) == 0 ]]; then
		echo -e " ${bold}${green}tree${reset} "
	else
		echo -e " ${bold}${red}tree${reset}"
	fi

	if [ -d ~/.vim/bundle/devicons ]; then
		echo -e " ${bold}${green}icons${reset} "
	else
		echo -e " ${bold}${red}icons${reset}"
	fi

	if [ $(grep -c "^tnoremap.*gcc \*" ~/.vimrc) -gt 0 ]; then
		echo -e " ${bold}${red}cflags${reset} "
	else
		echo -e " ${bold}${green}cflags${reset}"
	fi

	echo -e "\n${bold}---------  Theme  --------${reset}"
	echo " Your vim theme is: `cat ~/.vimrc | grep colorscheme | grep -Eo \"[a-z]+$\"` `cat ~/.vimrc | grep background | grep -Eo \"[a-z]+$\"`"
	
	echo -e "\n${bold}-------- Updates ---------${reset}"
	
	cd ~/.local/bin/SupraVim >/dev/null
	origin=`curl -s https://gitlab.com/hydrasho/SupraVim/-/commits/master | grep -Eo "Copy commit|\"[0-9a-z]{40}\"" | grep -Eo -m1 "[0-9a-z]{40}"`
	local=`git log master 2>/dev/null | grep -Eo -m1 "[0-9a-z]{40}"`
	if [ "$origin" = "$local" ];then
		echo -e "\033[92;1m master:\033[0m on date."
	else
		echo -e "/!\\ \033[91;1;5m master: an update available. \033[0m/!\\"
	fi
	origin=`curl -s https://gitlab.com/hydrasho/SupraVim/-/commits/dev | grep -Eo "Copy commit|\"[0-9a-z]{40}\"" | grep -Eo -m1 "[0-9a-z]{40}"`
	local=`git log dev 2>/dev/null | grep -Eo -m1 "[0-9a-z]{40}"`
	if [ "$origin" = "$local" ];then
		echo -e "\033[92;1m dev:\033[0m on date."
	else
		echo -e "\033[93;1m dev:\033[0m an update available."
	fi
}

uninstall_fct() {
	rm -rf "$HOME/.local/bin/SupraVim" "$HOME/.local/bin/supravim"	
}

update(){
	if [[ $1 = "dev" ]]
	then
		uninstall_fct && curl https://gitlab.com/hydrasho/SupraVim/-/raw/dev/installer_dev.sh | sh
	else
		uninstall_fct && curl https://gitlab.com/hydrasho/SupraVim/-/raw/master/installer.sh | sh
	fi
}

help_fct(){
	echo -e "${bold}#### SUPRAVIM EDITOR ####${reset}
	You are able to configure your supravim as wished: enable/ disable tools, edit theme.

	${bold}SETTINGS${reset}
		supravim <options>

		<options>:
		-s | status		see what is enabled/ disabled and theme using
		update			update supravim
		uninstall		uninstall supravim
		switch			switch to vim 

	${bold}ENABLE/ DISABLE${reset}
		supravim <${bold}${green}enable${reset} | -e> <option>
		supravim <${bold}${red}disable${reset} | -d> <option>
		
		<options>:
		autopairs		put automatically a closed bracket ('}', ']', ')'), when add an opened bracket
		mouse			use of mouse to move/ copy and paste in your file
		tree			left window automatically opened with files in the current directory
		icon			icon in nerdtree for different type/file directory
		cflags			compile with cflags (-Wall -Wextra -Werror) when pressing F5

	${bold}THEME CHOOSING${reset}
		supravim <theme | -t> <name_theme> <background>
		
		<name_theme>:
		1 |	gruvbox		(default) set to gruvbox theme
		2 |	molokai			.	.	.
		3 |	dracula			.	.	.
		4 |	atom			.	.	.
		5 |	iceberg			.	.	.
		6 |	onedark			.	.	.
		7 |	onehalf			.	.	.
		8 |	onelight		.	.	.

		<background>:
		${bold}\033[40mdark${reset}			(default) set the background color to black/ darker color
		\033[47;30mlight${reset}			set the beckground color to white/ lighter colors
		"
}

if [ $# -eq 0 ]
then
	help_fct
fi

for (( i=1; i<=$#; i++)); do
	option=${!i}
	next_param=$(($i + 1))
	export next_param="${!next_param}"
	case $option in 
		-e | enable) enable_fct; i=$(($i + 1));;
		-d | disable) disable_fct; i=$(($i + 1));;
		-t | theme) theme_fct; i=$(($i + 1)); 
			for next in "white" "black" "light" "dark"; do
				j=$((i + 1))
				if [[ "${!j}" = "$next" ]]; then
					export next_param="${!j}"; theme_fct; i=$((i + 1))
				fi
			done;;
		-s | status) status_fct;;
		-h | help) help_fct;;
		uninstall) uninstall_fct;;
		update) update $next_param;;
		switch) switch;;
		*) echo "Uncorrect argument: '$option' (help option can help you maybe?)";;
	esac
done

#/usr/bin/env bash
# complete -W "help update status enable disable theme" supravim
_SupraVim_completions()
{
	i=0
	arg=${COMP_WORDS[$i]}
	while [ "$arg" != "" ]; do
		i=$(( $i + 1 ))
		arg=${COMP_WORDS[$i]}
	done
	if [ $i -eq 1 ]; then
  		COMPREPLY=($(compgen -W "help update status enable disable theme" "${COMP_WORDS[$(( i - 1 ))]}"))
	elif [ "${COMP_WORDS[$(( i - 1 ))]}" = "enable" ] || [ "${COMP_WORDS[$(( i - 1 ))]}" = "disable" ]; then
		COMPREPLY=($(compgen -W "mouse autopairs tree cflags" "${COMP_WORDS[$(( i - 1 ))]}"))
	elif [ "${COMP_WORDS[$(( i - 1 ))]}" = "theme" ]; then
  		COMPREPLY=($(compgen -W "gruvbox molokai dracula atom iceberg onedark onehalf onelight" "${COMP_WORDS[$(( i - 1 ))]}"))
	else
  		COMPREPLY=($(compgen -W "help update status enable disable theme" "${COMP_WORDS[$(( i - 1 ))]}"))
	fi

}

complete -F _SupraVim_completions supravim
